-----------------------테이블 생성 쿼리문--------------------
-- 회원정보 테이블 생성
CREATE TABLE MEMBER(
MEMBERNUM NUMBER,
ID VARCHAR2(200) NOT NULL,
PASSWORD VARCHAR2(200) NOT NULL,
NAME VARCHAR2(200) NOT NULL,
NICKNAME VARCHAR2(200) NOT NULL,
EMAIL VARCHAR2(200) NOT NULL,
PHONE VARCHAR2(200) NOT NULL,
JOINDATE DATE NOT NULL,
CASH NUMBER NOT NULL,
BIRTHDAY DATE NOT NULL,
MAIN_ADDRESS VARCHAR2(300) NOT NULL,
DETAIL_ADDRESS VARCHAR2(200) NOT NULL,
POSTCODE VARCHAR2(100) NOT NULL,
CONSTRAINTS MEMBER_MEMBERNUM_PK PRIMARY KEY (MEMBERNUM)
);

-- 등급 기준 테이블 생성
CREATE TABLE ROLES(
ROLENUM NUMBER(1),
ROLENAME VARCHAR2(200),
CONSTRAINTS ROLES_ROLENUM_PK PRIMARY KEY (ROLENUM)
);

-- 회원별 등급 정보 테이블 생성
CREATE TABLE MEMBER_ROLES(
ROLENUM NUMBER(1),
MEMBERNUM NUMBER,
CONSTRAINTS MEMBER_ROLE_ROLENUM_FK FOREIGN KEY (ROLENUM) REFERENCES ROLES (ROLENUM),
CONSTRAINTS MEMBER_ROLE_MEMBERNUM_FK FOREIGN KEY (MEMBERNUM) REFERENCES MEMBER (MEMBERNUM)
);

------- 회원 이미지 테이블 생성 --------
CREATE TABLE MEMBERIMAGE(
FILENUM NUMBER,
FILENAME VARCHAR2(200),
ORINAME VARCHAR2(200),
MEMBERNUM NUMBER,
CONSTRAINTS MEMBERIMAGE_FILENUM_PK PRIMARY KEY (FILENUM),
CONSTRAINTS MEMBERIMAGE_NUM_FK FOREIGN KEY (MEMBERNUM) REFERENCES MEMBER (MEMBERNUM)
);

------- 회원 신고 테이블 생성 --------
CREATE TABLE MEMBERREPORT(
NUM NUMBER,
REPORTMEMBERNUM NUMBER,
REPORTNAME VARCHAR2(200),
REPORTNICKNAME VARCHAR2(200),
REPORTJOINDATE DATE,
REPORTEDMEMBERNUM NUMBER,
REPORTEDNAME VARCHAR2(200),
REPORTEDNICKNAME VARCHAR2(200),
REPORTEDJOINDATE DATE,
REPORTTITLE VARCHAR2(200),
REPORTCONTENT CLOB,
CONSTRAINTS MEMBERREPORT_NUM_PK PRIMARY KEY (NUM),
CONSTRAINTS MEMBERREPORT_REPORTMEMBERNUM_FK FOREIGN KEY (REPORTMEMBERNUM) REFERENCES MEMBER (MEMBERNUM),
CONSTRAINTS MEMBERREPORT_REPORTEDMEMBERNUM_FK FOREIGN KEY (REPORTEDMEMBERNUM) REFERENCES MEMBER (MEMBERNUM)
);

------ 문의글 테이블 생성 ----------
CREATE TABLE INQUIRY(
NUM NUMBER,
WRITER VARCHAR2(100),
TITLE VARCHAR2(200),
CONTENTS CLOB,
REGDATE DATE,
REF NUMBER,
STEP NUMBER,
CONSTRAINTS INQUIRY_NUM_PK PRIMARY KEY (NUM)
);

----------------- 시퀀스 생성 쿼리문-------------------
------------- 회원 정보 테이블 시퀀스 생성  -------------
CREATE SEQUENCE MEMBER_SEQ;

----------- 회원 이미지 테이블 시퀀스 생성 ---------------
CREATE SEQUENCE MEMBERIMAGE_SEQ;

---------- 회원 신고 테이블 시퀀스 생성 -----------------
CREATE SEQUENCE MEMBERREPORT_SEQ;

-------------- 문의글 시퀀스 생성 ---------------------
CREATE SEQUENCE INQUIRY_SEQ;

---------------- INSERT 쿼리문 ---------------------
--------------- 회원 정보 INSERT --------------------
INSERT INTO MEMBER(MEMBERNUM, ID, PASSWORD, NAME, NICKNAME, EMAIL, PHONE, JOINDATE, CASH, BIRTHDAY, MAIN_ADDRESS, DETAIL_ADDRESS, POSTCODE)
VALUES(MEMBER_SEQ.NEXTVAL, 'admin', 'adimn', 'AA', 'AA', 'AA@AA', '111', SYSDATE, 0, TO_DATE('1994-05-25','YYYY-MM-DD'), 'seoul', '201', '88305');

INSERT INTO MEMBER(MEMBERNUM, ID, PASSWORD, NAME, NICKNAME, EMAIL, PHONE, JOINDATE, CASH, BIRTHDAY, MAIN_ADDRESS, DETAIL_ADDRESS, POSTCODE)
VALUES(MEMBER_SEQ.NEXTVAL, 'member1', 'member1', 'BB', 'BB', 'BB@BB', '222', SYSDATE, 0, TO_DATE('1995-05-25','YYYY-MM-DD'), 'BUSAN', '201', '88305');

INSERT INTO MEMBER(MEMBERNUM, ID, PASSWORD, NAME, NICKNAME, EMAIL, PHONE, JOINDATE, CASH, BIRTHDAY, MAIN_ADDRESS, DETAIL_ADDRESS, POSTCODE)
VALUES(MEMBER_SEQ.NEXTVAL, 'member2', 'member2', 'CC', 'CC', 'CC@CC', '333', SYSDATE, 0, TO_DATE('1996-05-25','YYYY-MM-DD'), 'DAEGU', '201', '88305');

INSERT INTO MEMBER(MEMBERNUM, ID, PASSWORD, NAME, NICKNAME, EMAIL, PHONE, JOINDATE, CASH, BIRTHDAY, MAIN_ADDRESS, DETAIL_ADDRESS, POSTCODE)
VALUES(MEMBER_SEQ.NEXTVAL, 'member3', 'member3', 'DD', 'DD', 'DD@DD', '444', SYSDATE, 0, TO_DATE('1997-05-25','YYYY-MM-DD'), 'JEONJU', '201', '88305');

--------------- 회원 등급 종류 INSERT --------------------
INSERT INTO ROLES(ROLENUM, ROLENAME)
VALUES(1,'admin');

INSERT INTO ROLES(ROLENUM, ROLENAME)
VALUES(2,'member');

INSERT INTO ROLES(ROLENUM, ROLENAME)
VALUES(2,'black');

-------------- 회원별 등급 INSERT -------------------
INSERT INTO MEMBER_ROLES (ROLENUM,MEMBERNUM)
VALUES(1,1);

INSERT INTO MEMBER_ROLES (ROLENUM,MEMBERNUM)
VALUES(2,2);

INSERT INTO MEMBER_ROLES (ROLENUM,MEMBERNUM)
VALUES(2,3);

INSERT INTO MEMBER_ROLES (ROLENUM,MEMBERNUM)
VALUES(2,4);

